// auto-generated by vovk-cli v0.0.1-draft.346 at 2025-08-30T11:29:32.261Z
import type { VovkClientFetcher } from 'vovk';
import { createRPC } from 'vovk';
import { schema } from './schema';
import { openapi } from './openapi';

import type { Controllers as Controllers0 } from "../src/app/api/[[...vovk]]/route.ts";

import type { Controllers as Controllers1 } from "../src/app/api/static/[[...vovk]]/route.ts";

   

  
export const UserRPC = createRPC<Controllers0["UserRPC"], typeof import('vovk').fetcher extends VovkClientFetcher<infer U> ? U : never>(
  schema, '', 'UserRPC', import('vovk'),
  { validateOnClient: import('vovk-ajv'), apiRoot: 'http://localhost:3000/api' }
);

export const StreamRPC = createRPC<Controllers0["StreamRPC"], typeof import('vovk').fetcher extends VovkClientFetcher<infer U> ? U : never>(
  schema, '', 'StreamRPC', import('vovk'),
  { validateOnClient: import('vovk-ajv'), apiRoot: 'http://localhost:3000/api' }
);

  
export const OpenApiRPC = createRPC<Controllers1["OpenApiRPC"], typeof import('vovk').fetcher extends VovkClientFetcher<infer U> ? U : never>(
  schema, 'static', 'OpenApiRPC', import('vovk'),
  { validateOnClient: import('vovk-ajv'), apiRoot: 'http://localhost:3000/api' }
);

export { schema, openapi };
